{"ast":null,"code":"var _jsxFileName = \"/home/calum/Projects/speeday-boi/speeday-fe/src/components/taskCreation/taskCreator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from 'styled-components';\nimport { TaskAPI } from \"../../api/taskAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatorArea = styled.div`\n  background-color: #8eb0ad;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n_c = CreatorArea;\nconst CreatorTextArea = styled.textarea`\n    line-height: 30px;\n    height: 60vh;\n    width: 60vh;\n    padding: 0px 10px;\n    border: 2px;\n    border-color: white;\n    border-radius: 20px;\n    outline: 0;\n    color: white;\n    font-family: 'Almarai', cursive;\n    text-align: left;\n    font-weight: bold;\n    font-size: 20px;\n    background-color: white;\n    color: gray;\n    top: 30px; left: 0; bottom: 30px; right: 60px;\n    background: linear-gradient(white, white 28px, #91D1D3 28px);\n    background-size: 30px 30px;\n    z-index: 1;\n`;\n_c2 = CreatorTextArea;\nconst TaskSubmitButton = styled.button`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 6px 14px;\n  font-size: 25px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;\n  border-radius: 6px;\n  border: none;\n  margin-top: 30px;\n  background: #6E6D70;\n  box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1), inset 0px 0.5px 0.5px rgba(255, 255, 255, 0.5), 0px 0px 0px 0.5px rgba(0, 0, 0, 0.12);\n  color: #DFDEDF;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n}\n`;\n_c3 = TaskSubmitButton;\nfunction TaskCreator() {\n  _s();\n  const [taskList, setTaskList] = useState([]);\n  function formatTasks(tasks) {\n    // split the string after from, we don't need it any more\n    formattedTasks = [];\n    taskName = taskName.split(\"from\")[0];\n    startTime = taskName.split(\"until\")[0];\n  }\n  function updateTasks(e) {\n    let tasks = formatTasks(e.target.value);\n    setTaskList(tasks);\n  }\n  function submitTasks(e) {\n    console.log('here');\n    e.preventDefault();\n    if (taskList.length > 0) {\n      TaskAPI.createMany(taskList);\n    } else {\n      console.log('You need to add some tasks');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(CreatorArea, {\n    children: [/*#__PURE__*/_jsxDEV(CreatorTextArea, {\n      onChange: updateTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskSubmitButton, {\n      onClick: submitTasks,\n      children: \"Submit Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskCreator, \"mW6q2/agXv25Ej2PBKHyLCwtTHc=\");\n_c4 = TaskCreator;\nexport default TaskCreator;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CreatorArea\");\n$RefreshReg$(_c2, \"CreatorTextArea\");\n$RefreshReg$(_c3, \"TaskSubmitButton\");\n$RefreshReg$(_c4, \"TaskCreator\");","map":{"version":3,"names":["React","useState","styled","TaskAPI","jsxDEV","_jsxDEV","CreatorArea","div","_c","CreatorTextArea","textarea","_c2","TaskSubmitButton","button","_c3","TaskCreator","_s","taskList","setTaskList","formatTasks","tasks","formattedTasks","taskName","split","startTime","updateTasks","e","target","value","submitTasks","console","log","preventDefault","length","createMany","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c4","$RefreshReg$"],"sources":["/home/calum/Projects/speeday-boi/speeday-fe/src/components/taskCreation/taskCreator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport styled from 'styled-components'\n\nimport { TaskAPI } from \"../../api/taskAPI\"\n\n\nconst CreatorArea = styled.div`\n  background-color: #8eb0ad;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst CreatorTextArea = styled.textarea`\n    line-height: 30px;\n    height: 60vh;\n    width: 60vh;\n    padding: 0px 10px;\n    border: 2px;\n    border-color: white;\n    border-radius: 20px;\n    outline: 0;\n    color: white;\n    font-family: 'Almarai', cursive;\n    text-align: left;\n    font-weight: bold;\n    font-size: 20px;\n    background-color: white;\n    color: gray;\n    top: 30px; left: 0; bottom: 30px; right: 60px;\n    background: linear-gradient(white, white 28px, #91D1D3 28px);\n    background-size: 30px 30px;\n    z-index: 1;\n`\n\nconst TaskSubmitButton = styled.button`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 6px 14px;\n  font-size: 25px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;\n  border-radius: 6px;\n  border: none;\n  margin-top: 30px;\n  background: #6E6D70;\n  box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1), inset 0px 0.5px 0.5px rgba(255, 255, 255, 0.5), 0px 0px 0px 0.5px rgba(0, 0, 0, 0.12);\n  color: #DFDEDF;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n}\n`\n\nfunction TaskCreator() {\n\n  const [taskList, setTaskList] = useState(\n    []\n  );\n\n  function formatTasks(tasks){\n    // split the string after from, we don't need it any more\n    formattedTasks = [];\n    taskName = taskName.split(\"from\")[0];\n    startTime = taskName.split(\"until\")[0];\n  }\n\n  function updateTasks(e){\n    let tasks = formatTasks(e.target.value) \n    setTaskList(tasks)\n  }\n\n  function submitTasks(e) {\n    console.log('here')\n    e.preventDefault();\n    if (taskList.length > 0) {\n      TaskAPI.createMany(taskList)\n    } else {\n      console.log('You need to add some tasks')\n    }\n  }\n\n  return (\n    <CreatorArea>\n      <CreatorTextArea onChange={updateTasks}/>\n      <TaskSubmitButton onClick={submitTasks}>\n        Submit Tasks\n      </TaskSubmitButton>\n    </CreatorArea>\n\n  );\n}\n\nexport default TaskCreator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,OAAO,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GAPKF,WAAW;AASjB,MAAMG,eAAe,GAAGP,MAAM,CAACQ,QAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GApBKF,eAAe;AAsBrB,MAAMG,gBAAgB,GAAGV,MAAM,CAACW,MAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GAjBKF,gBAAgB;AAmBtB,SAASG,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CACtC,EACF,CAAC;EAED,SAASkB,WAAWA,CAACC,KAAK,EAAC;IACzB;IACAC,cAAc,GAAG,EAAE;IACnBC,QAAQ,GAAGA,QAAQ,CAACC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpCC,SAAS,GAAGF,QAAQ,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACxC;EAEA,SAASE,WAAWA,CAACC,CAAC,EAAC;IACrB,IAAIN,KAAK,GAAGD,WAAW,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACvCV,WAAW,CAACE,KAAK,CAAC;EACpB;EAEA,SAASS,WAAWA,CAACH,CAAC,EAAE;IACtBI,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBL,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAIf,QAAQ,CAACgB,MAAM,GAAG,CAAC,EAAE;MACvB9B,OAAO,CAAC+B,UAAU,CAACjB,QAAQ,CAAC;IAC9B,CAAC,MAAM;MACLa,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C;EACF;EAEA,oBACE1B,OAAA,CAACC,WAAW;IAAA6B,QAAA,gBACV9B,OAAA,CAACI,eAAe;MAAC2B,QAAQ,EAAEX;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzCnC,OAAA,CAACO,gBAAgB;MAAC6B,OAAO,EAAEZ,WAAY;MAAAM,QAAA,EAAC;IAExC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAGlB;AAACxB,EAAA,CArCQD,WAAW;AAAA2B,GAAA,GAAX3B,WAAW;AAuCpB,eAAeA,WAAW;AAAC,IAAAP,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAA4B,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}